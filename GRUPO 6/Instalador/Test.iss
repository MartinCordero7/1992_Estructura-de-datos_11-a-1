; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "DeliverySweet"
#define MyAppVersion "1.5"
#define MyAppPublisher "DeliverySweet, Inc."
#define MyAppURL "https://www.deliverysweet.com/"
#define MyAppExeName "main.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{32F3EBF9-447B-48F7-BDD0-50577425A1BE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=C:\ESPE\1992-ESTRUCTURA DE DATOS\Test Instalador\Setup\License.txt
InfoBeforeFile=C:\ESPE\1992-ESTRUCTURA DE DATOS\Test Instalador\Setup\README.txt
InfoAfterFile=C:\ESPE\1992-ESTRUCTURA DE DATOS\Test Instalador\Setup\About.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputBaseFilename=Setup
SetupIconFile=C:\ESPE\1992-ESTRUCTURA DE DATOS\Test Instalador\Setup\Logo.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
DisableDirPage=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\ESPE\1992-ESTRUCTURA DE DATOS\1992_Estructura-de-datos_11-a-1\GRUPO 6\ProyectoTercerParcial\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\ESPE\1992-ESTRUCTURA DE DATOS\1992_Estructura-de-datos_11-a-1\GRUPO 6\ProyectoTercerParcial\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
;Registry data from file configuracion.reg
Root: HKLM; Subkey: "Software\MiSoftware"; Flags: uninsdeletekeyifempty; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware"; ValueType: string; ValueName: "RutaInstalacion"; ValueData: "C:\Archivos de Programa\MiSoftware"; Flags: uninsdeletevalue; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware"; ValueType: string; ValueName: "Version"; ValueData: "1.0"; Flags: uninsdeletevalue; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware"; ValueType: dword; ValueName: "Activado"; ValueData: $00000001; Flags: uninsdeletevalue; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware\Config"; Flags: uninsdeletekeyifempty; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware\Config"; ValueType: dword; ValueName: "MaxUsuarios"; ValueData: $00000010; Flags: uninsdeletevalue; Check: IsAdminInstallMode
Root: HKLM; Subkey: "Software\MiSoftware\Config"; ValueType: string; ValueName: "Modo"; ValueData: "Produccion"; Flags: uninsdeletevalue; Check: IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware"; Flags: uninsdeletekeyifempty; Check: not IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware"; ValueType: string; ValueName: "Usuario"; ValueData: "UsuarioPredeterminado"; Flags: uninsdeletevalue; Check: not IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware"; ValueType: string; ValueName: "UltimaConexion"; ValueData: "2024-12-01"; Flags: uninsdeletevalue; Check: not IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware\Preferencias"; Flags: uninsdeletekeyifempty; Check: not IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware\Preferencias"; ValueType: string; ValueName: "Tema"; ValueData: "Oscuro"; Flags: uninsdeletevalue; Check: not IsAdminInstallMode
Root: HKCU; Subkey: "Software\MiSoftware\Preferencias"; ValueType: dword; ValueName: "Notificaciones"; ValueData: $00000001; Flags: uninsdeletevalue; Check: not IsAdminInstallMode
Root: HKA; Subkey: "Software\Classes\.miarchivo"; Flags: uninsdeletekeyifempty
Root: HKA; Subkey: "Software\Classes\.miarchivo"; ValueType: string; ValueName: ""; ValueData: "MiSoftwareFile"; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\.miarchivo"; ValueType: string; ValueName: "Descripcion"; ValueData: "Archivo asociado con MiSoftware"; Flags: uninsdeletevalue
;End of registry data from file configuracion.reg

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\api_mapa\server.exe"; Parameters: "server.py"; WorkingDir: "{app}"; Description: "Iniciar servidor Flask"; Flags: nowait postinstall skipifsilent
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
const
  Key1 = 'ABC1-DEF2-GHI3-JKL4-RT4R';
  Key2 = '18XU-7650-MCUB-M9TY-ERT4';
  Key3 = '5Z5Q-A63T-PRWX-QXYZ-6XSC';
  Key4 = 'PGAI-3GJF-XMHY-HCHO-HET3';
  Key5 = 'GSYL-MWEE-UJT3-LK2H-F0AJ';

  WM_SETFOCUS = $0007;

var
  ProductKeyPage: TWizardPage;
  KeyEdit1, KeyEdit2, KeyEdit3, KeyEdit4, KeyEdit5: TEdit;
  InfoLabel: TLabel;
  KeyLabel1, KeyLabel2, KeyLabel3, KeyLabel4, KeyLabel5: TLabel;

procedure SetFocusSafe(Edit: TEdit);
begin
  { Usa SendMessage para evitar errores en SetFocus }
  SendMessage(Edit.Handle, WM_SETFOCUS, 0, 0);
end;

procedure HandleEditChange(Sender: TObject);
begin
  { Mueve el foco al siguiente campo autom치ticamente cuando se alcanzan 4 caracteres }
  if Sender = KeyEdit1 then
  begin
    if Length(KeyEdit1.Text) = 4 then
      SetFocusSafe(KeyEdit2);
  end
  else if Sender = KeyEdit2 then
  begin
    if Length(KeyEdit2.Text) = 4 then
      SetFocusSafe(KeyEdit3);
  end
  else if Sender = KeyEdit3 then
  begin
    if Length(KeyEdit3.Text) = 4 then
      SetFocusSafe(KeyEdit4);
  end
  else if Sender = KeyEdit4 then
  begin
    if Length(KeyEdit4.Text) = 4 then
      SetFocusSafe(KeyEdit5);
  end;
end;

procedure InitializeWizard;
begin
  { Crea una p치gina personalizada para solicitar la clave de producto }
  ProductKeyPage := CreateCustomPage(wpWelcome,
    'Clave de Producto',
    'Ingrese su clave de producto');

  { Agrega un mensaje adicional en la p치gina }
  InfoLabel := TLabel.Create(WizardForm);
  InfoLabel.Parent := ProductKeyPage.Surface;
  InfoLabel.Caption := 'Por favor, introduzca su clave de producto para continuar con la instalaci칩n.';
  InfoLabel.Left := 10;
  InfoLabel.Top := 10;
  InfoLabel.Width := ProductKeyPage.Surface.Width - 20;

  { Crear etiquetas como "placeholders" para los bloques de clave }
  KeyLabel1 := TLabel.Create(WizardForm);
  KeyLabel1.Parent := ProductKeyPage.Surface;
  KeyLabel1.Caption := 'XXXX';
  KeyLabel1.Left := 10;
  KeyLabel1.Top := 40;
  KeyLabel1.Width := 70;

  KeyLabel2 := TLabel.Create(WizardForm);
  KeyLabel2.Parent := ProductKeyPage.Surface;
  KeyLabel2.Caption := 'XXXX';
  KeyLabel2.Left := KeyLabel1.Left + KeyLabel1.Width + 10;
  KeyLabel2.Top := KeyLabel1.Top;
  KeyLabel2.Width := 70;

  KeyLabel3 := TLabel.Create(WizardForm);
  KeyLabel3.Parent := ProductKeyPage.Surface;
  KeyLabel3.Caption := 'XXXX';
  KeyLabel3.Left := KeyLabel2.Left + KeyLabel2.Width + 10;
  KeyLabel3.Top := KeyLabel1.Top;
  KeyLabel3.Width := 70;

  KeyLabel4 := TLabel.Create(WizardForm);
  KeyLabel4.Parent := ProductKeyPage.Surface;
  KeyLabel4.Caption := 'XXXX';
  KeyLabel4.Left := KeyLabel3.Left + KeyLabel3.Width + 10;
  KeyLabel4.Top := KeyLabel1.Top;
  KeyLabel4.Width := 70;

  KeyLabel5 := TLabel.Create(WizardForm);
  KeyLabel5.Parent := ProductKeyPage.Surface;
  KeyLabel5.Caption := 'XXXX';
  KeyLabel5.Left := KeyLabel4.Left + KeyLabel4.Width + 10;
  KeyLabel5.Top := KeyLabel1.Top;
  KeyLabel5.Width := 70;

  { Crear campos de entrada para cada bloque }
  KeyEdit1 := TEdit.Create(WizardForm);
  KeyEdit1.Parent := ProductKeyPage.Surface;
  KeyEdit1.Left := 10;
  KeyEdit1.Top := 40;
  KeyEdit1.Width := 70;
  KeyEdit1.MaxLength := 4;
  KeyEdit1.OnChange := @HandleEditChange;

  KeyEdit2 := TEdit.Create(WizardForm);
  KeyEdit2.Parent := ProductKeyPage.Surface;
  KeyEdit2.Left := KeyEdit1.Left + KeyEdit1.Width + 10;
  KeyEdit2.Top := KeyEdit1.Top;
  KeyEdit2.Width := 70;
  KeyEdit2.MaxLength := 4;
  KeyEdit2.OnChange := @HandleEditChange;

  KeyEdit3 := TEdit.Create(WizardForm);
  KeyEdit3.Parent := ProductKeyPage.Surface;
  KeyEdit3.Left := KeyEdit2.Left + KeyEdit2.Width + 10;
  KeyEdit3.Top := KeyEdit1.Top;
  KeyEdit3.Width := 70;
  KeyEdit3.MaxLength := 4;
  KeyEdit3.OnChange := @HandleEditChange;

  KeyEdit4 := TEdit.Create(WizardForm);
  KeyEdit4.Parent := ProductKeyPage.Surface;
  KeyEdit4.Left := KeyEdit3.Left + KeyEdit3.Width + 10;
  KeyEdit4.Top := KeyEdit1.Top;
  KeyEdit4.Width := 70;
  KeyEdit4.MaxLength := 4;
  KeyEdit4.OnChange := @HandleEditChange;

  KeyEdit5 := TEdit.Create(WizardForm);
  KeyEdit5.Parent := ProductKeyPage.Surface;
  KeyEdit5.Left := KeyEdit4.Left + KeyEdit4.Width + 10;
  KeyEdit5.Top := KeyEdit1.Top;
  KeyEdit5.Width := 70;
  KeyEdit5.MaxLength := 4;
  KeyEdit5.OnChange := @HandleEditChange;
end;

function CombineKeyBlocks: String;
begin
  { Combina los valores de los campos con guiones }
  Result := KeyEdit1.Text + '-' +
            KeyEdit2.Text + '-' +
            KeyEdit3.Text + '-' +
            KeyEdit4.Text + '-' +
            KeyEdit5.Text;
end;

function CheckProductKey(const Key: string): Boolean;
begin
  Result := (Key = Key1) or (Key = Key2) or (Key = Key3) or (Key = Key4) or (Key = Key5);
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  EnteredKey: String;
begin
  Result := True;

  if CurPageID = ProductKeyPage.ID then
  begin
    { Combina los bloques para obtener la clave completa }
    EnteredKey := CombineKeyBlocks;

    { Verifica si la clave es v치lida }
    if not CheckProductKey(EnteredKey) then
    begin
      MsgBox('La clave de producto ingresada no es v치lida. Por favor, int칠ntelo de nuevo.',
        mbError, MB_OK);
      Result := False;
    end;
  end;
end;

